version: "3.8"
services:  # containers
  client:   # anguler app running on nginx 
    build:   # to use Dockerfile in /client to build image
      context: ./client
    ports:
      - "4200:4200"
    container_name: client
    depends_on:  # need api and webapi to be built first
      - api
      - webapi
  api:   # node api 
    build:   # to use Dockerfile in /nodeapi to build image
      context: ./nodeapi
    ports:
      - "5000:5000"
    restart: always # give time for nodeapi container to restart while wait for mongodb container to up
    container_name: api
    depends_on:  # need nginx and db ready to start
      - nginx
      - emongo
  webapi:  # java books api 
    build:  # to use Dockerfile in /javaapi to build image
      context: ./javaapi
    ports:
      - "9000:9000"
    restart: always # give time for java container to restart while wait for db mysql container to up
    container_name: webapi
    depends_on:  # need mysql db ready so webapi to connect
      - emartdb

  nginx:  # frontend api gateway
    restart: always
    image: nginx:latest
    container_name: nginx
    volumes:  # mapping nginx conf file from local by add volume attached, to replace /etc/nginx/conf.d/default.conf
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:80"
    depends_on:  # need client to be built first
      - client

  emongo:  # for nodeapi, from official mongo image
    image: mongo:4
    container_name: emongo
    environment:   # set env for db name as epoc as project required
      - MONGO_INITDB_DATABASE=epoc
    ports:
      - "27017:27017"

  emartdb: # mysql for javaapi 
    image: mysql:8.0.33
    container_name: emartdb
    ports:
      - "3306:3306"
    environment: # set env for root  passwd and db name as "books"
      - MYSQL_ROOT_PASSWORD=emartdbpass
      - MYSQL_DATABASE=books
